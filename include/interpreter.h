#ifndef INTERPRETER_H
#define INTERPRETER_H

#include "common.h"
#include "init.h"
#include "error.h"
#include "scanner.h"
#include "lexer.h"
#include "object.h"
#include "parser.h"
#include "builtin.h"

#define GLOBAL_CONTEXT_CAP 51
#define LOCAL_CONTEXT_CAP 17

/*
Interpreter class
	evaluates the abstract syntax tree generated by a parser
	maintains a global Context
*/
typedef struct interpreter_t
{
	Parser *parser;
	ListObject *context;

} Interpreter;

/* Interpreter methods */
Interpreter *new_Interpreter(int argc, char **argv);
void del_Interpreter(Interpreter *self);
Object *Interpreter_eval(Object *object, ListObject *context, int eval_mod);
Object *Interpreter_getnext(Interpreter *self);

Object *Context_get(ListObject *context, SymbolObject *symbol);
int Context_set(ListObject *context, SymbolObject *symbol, Object *value);

#endif //INTERPRETER_H